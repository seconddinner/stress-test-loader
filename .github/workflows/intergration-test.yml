name: build-test

on:
  # we are only going to run it on PR
  pull_request:
    paths-ignore: [ '*.md' ]
    branches:
      - main
      - '**'
  push:
    branches:
      - main
      - wwu/test-github-actions
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}

permissions:
  id-token: write
  contents: read

jobs:
  stresstest-build-test:
    runs-on: ubuntu-latest
    #container: seconddinner/build:0.0.5
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          stress-test-loader:
            - 'stress-test-loader/**'
          packer:
            - 'stress-test-loader/cicd/**'
          docs:
            - 'docs/**'
          infra-pulumi:
            - 'infra-pulumi/**'
    - name: build
      if: steps.filter.outputs.stress-test-loader  == 'true'
      run: cd stress-test-loader; bash ./build.sh
    - name: AWS Setup
      if: steps.filter.outputs.infra-pulumi  == 'true'
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: us-west-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: stresstest-loader-githubaction-aws-role
    - name: packer build
      if: steps.filter.outputs.packer  == 'true'
      run: |
        cd $GITHUB_WORKSPACE/stress-test-loader
        bash ./cicd/ami/build-stress-test-loader.sh

  backend-test:
    runs-on: ubuntu-latest
    #container: seconddinner/build:0.0.5
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          infra-pulumi:
            - 'infra-pulumi/**'
          games:
            - 'games/**'
    
    - name: AWS Setup
      if: |
        steps.filter.outputs.infra-pulumi  == 'true' || steps.filter.outputs.games  == 'true'
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: us-west-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: stresstest-loader-githubaction-aws-role
    
    - name: pulumi backend infra
      if: steps.filter.outputs.games  == 'true'
      run: |
        cd $GITHUB_WORKSPACE/games/t1/WebAPILambda
        dotnet  publish  -c Release -r linux-arm64 --no-self-contained
        zip -j -r bin/Release/net6.0/linux-arm64/lambda.zip bin/Release/net6.0/linux-arm64/publish/
        cd $GITHUB_WORKSPACE/games/t1/backend
        pulumi login ${{ secrets.SD_STRESSTESTLOADER_PULUMI_BACKEND }}
        pulumi preview --stack stresstest-loader-cicd --non-interactive
        pulumi up --stack stresstest-loader-cicd --non-interactive  --skip-preview > pulumi.output.json
        cd $GITHUB_WORKSPACE/games/t1/backend-api
        dotnet run
        # cat pulumi.output.json
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

    - name: pulumi stress test infra
      #if: steps.filter.outputs.infra-pulumi  == 'true'
      run: |
        cd $GITHUB_WORKSPACE/infra-pulumi/Infra.Pulumi/Infra.Pulumi
        pulumi login ${{ secrets.SD_STRESSTESTLOADER_PULUMI_BACKEND }}
        dotnet run --project-name stress-test-loader-pulumi --stack-name dev
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
        public_key: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIB04L+iBL3YLCMTVl9S5gIEQZPsuNVExl54YNUB3oZD5
        stress_test_loader_allowed_cidr: "1.1.1.1/32"
        environment: stresstest-git-action
    
    - name: pulumi destroy stress test infra
      #if: steps.filter.outputs.infra-pulumi  == 'true'
      run: |
        cd $GITHUB_WORKSPACE/infra-pulumi/Infra.Pulumi/Infra.Pulumi
        pulumi login ${{ secrets.SD_STRESSTESTLOADER_PULUMI_BACKEND }}
        dotnet run --project-name stress-test-loader-pulumi --stack-name dev --destroy
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
        public_key: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIB04L+iBL3YLCMTVl9S5gIEQZPsuNVExl54YNUB3oZD5
        stress_test_loader_allowed_cidr: "1.1.1.1/32"
        environment: stresstest-git-action
        
    - name: pulumi destroy backend infra
      if: steps.filter.outputs.games  == 'true'
      run: |
        cd $GITHUB_WORKSPACE/games/t1/backend
        pulumi login ${{ secrets.SD_STRESSTESTLOADER_PULUMI_BACKEND }}
        pulumi stack  select stresstest-loader-cicd
        pulumi state  unprotect --all --non-interactive
        pulumi destroy --stack stresstest-loader-cicd --non-interactive --skip-preview -j > pulumi_destroy.output.json
        cd $GITHUB_WORKSPACE/games/t1/backend-api
        dotnet run destroy
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

  stresstest-start-test:
    runs-on: ubuntu-latest
    #container: seconddinner/build:0.0.5
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: AWS Setup
      if: |
        steps.filter.outputs.infra-pulumi  == 'true' || steps.filter.outputs.games  == 'true'
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: us-west-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: stresstest-loader-githubaction-aws-role

    - name: simple stress test client build
      run: |
        cd $GITHUB_WORKSPACE/simple-stress-test-client/StressTest
        dotnet publish -r linux-arm64 --self-contained true -c Release
        cd bin/Release
        cd "$(ls -d */ | head -n 1)"
        cd linux-arm64/publish
        tar czf /tmp/stress-test-cli-${GITHUB_SHA::7}.tgz ./
        aws s3 cp /tmp/stress-test-cli-${GITHUB_SHA::7}.tgz s3://cubestressclientartifactbucket-sd/stress-test-cli-${GITHUB_SHA::7}.tgz