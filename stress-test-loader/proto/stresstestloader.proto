
syntax = "proto3";

option go_package = "github.com/seconddinner/jxie-sd/stress-test/stress-test-loader/stresstestloader";

package stresstestloader;

// The StartLoadTest service definition.
service LoadTestLoader {
  // Sends a list of stresstest public ip to varify
  rpc StartLoadTest(TestRequest) returns (TestReply) {}
}

message EnvVariable {
  string EnvName = 1;
  string EnvValue = 2;
}

// The request to StartLoadTest
message TestRequest {
  string loadtestExec = 1;
  string s3 = 2;
  string s3key = 5;
  repeated EnvVariable envVariableList = 3;
  // will add   bool runUntilStoped ;
  int32 numberOfGames = 4;
}

message StressTestConfig {
  string workingFolder = 1;
  enum DebugLevelEnum {
    PanicLevel = 0;
  	FatalLevel = 1;
	  ErrorLevel = 2;
  	WarnLevel = 3;
  	InfoLevel = 4;
  	DebugLevel = 5;
  	TraceLevel = 6;
  }
  optional DebugLevelEnum debugL = 4;
  int32 listenPort = 5;
}
// The response for the StartLoadTest
message TestReply {
  string status = 1;
}
